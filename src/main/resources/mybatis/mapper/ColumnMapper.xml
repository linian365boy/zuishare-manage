<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.zuishare.dao.ColumnDao">
	<resultMap type="Column" id="ColumnMap">
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="enName" property="enName" jdbcType="VARCHAR"/>
		<result column="url" property="url" jdbcType="VARCHAR"/>
		<result column="parentId" property="parentId" jdbcType="INTEGER"/>
		<result column="priority" property="priority" jdbcType="INTEGER"/>
		<result column="createDate" property="createDate" jdbcType="TIMESTAMP"/>
		<result column="code" property="code" jdbcType="VARCHAR"/>
		<result column="depth" property="depth" jdbcType="INTEGER"/>
		<result column="type" property="type" jdbcType="INTEGER"/>
		<result column="hasNeedForm" property="hasNeedForm" jdbcType="BOOLEAN"/>
		<!-- 非表字段 -->
		<result column="parentName" property="parentName" jdbcType="VARCHAR"/>
	</resultMap>
	
	<resultMap type="Column" id="ColumnAndChildMap">
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="name" property="name" jdbcType="VARCHAR"/>
		<result column="enName" property="enName" jdbcType="VARCHAR"/>
		<result column="url" property="url" jdbcType="VARCHAR"/>
		<result column="parentId" property="parentId" jdbcType="INTEGER"/>
		<result column="priority" property="priority" jdbcType="INTEGER"/>
		<result column="createDate" property="createDate" jdbcType="TIMESTAMP"/>
		<result column="code" property="code" jdbcType="VARCHAR"/>
		<result column="depth" property="depth" jdbcType="INTEGER"/>
		<result column="type" property="type" jdbcType="INTEGER"/>
		<result column="hasNeedForm" property="hasNeedForm" jdbcType="BOOLEAN"/>
		<!-- 非表字段 -->
		<result column="parentName" property="parentName" jdbcType="VARCHAR"/>
		<collection property="childColumn" ofType="Column">
			<id column="child_id" property="id" jdbcType="INTEGER"/>
			<result column="child_name" property="name" jdbcType="VARCHAR"/>
		</collection>
	</resultMap>
	
	<select id="findParentByAjax" resultType="Column">
		select c.id,c.name from tb_column c where c.parentId is null order by c.priority desc,c.id desc
	</select>
	
	<select id="loadColumnByCode" resultType="Column" parameterType="String">
		select * from tb_column c where c.code = #{code}
	</select>
	
	<select id="findChildrenByParentId" parameterType="int" resultType="Column">
		select c.id,c.name from tb_column c where c.parentId = #{pId} order by c.priority desc,c.id desc
	</select>
	
	<select id="updateColumnPublishContent">
		update tb_column c set c.type = #{type},c.hasNeedForm = #{hasNeedForm} where c.id = #{id} or c.parentId = #{id}
	</select>
	
	<select id="findOne" resultMap="ColumnAndChildMap" parameterType="int">
		select c1.*,c2.id as child_id,c2.name as child_name from tb_column c1 left join 
		tb_column c2 on c2.parentId=c1.id where c1.id=#{id}
	</select>
	
	<select id="save" parameterType="Column">
		insert into tb_column(id,name,enName,url,parentId,priority,createDate,code,depth,type,hasNeedForm) 
		values(null,#{name},#{enName},#{url},#{parentId},#{priority},#{createDate},#{code},#{depth},#{type},#{hasNeedForm})
	</select>
	
	<update id="updateColumn" parameterType="Column">
		update tb_column set name=#{name},enName=#{enName},url=#{url},priority=#{priority},code=#{code},parentId=#{parentId} where id=#{id}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from tb_column where id=#{id}
	</delete>
	
	<select id="countColumnByCode" parameterType="String" resultType="long">
		select count(*) from tb_column where code=#{code}
	</select>
	
	<select id="findAll" resultType="Column">
		select * from tb_column order by c.priority desc,c.id desc
	</select>
	
	<select id="findAllCount" resultType="long" parameterType="top.zuishare.spi.dto.request.RequestParam">
		select count(*) from tb_column 
		<where>
			<if test="search!=null and search!=''">
				name like CONCAT('%',#{search},'%') or 
				code like CONCAT('%',#{search},'%') or 
				enName like CONCAT('%',#{search},'%')
			</if>
		</where>
	</select>
	
	<select id="findList" resultMap="ColumnMap">
		select t1.*,t2.name as parentName from tb_column t1 left join tb_column t2 on t1.parentId = t2.id 
		<where>
			<if test="search!=null and search!=''">
				t1.name like CONCAT('%',#{search},'%') or 
				t1.code like CONCAT('%',#{search},'%') or 
				t1.enName like CONCAT('%',#{search},'%')
			</if>
		</where>
		order by t1.priority desc,t1.id desc limit #{offset},#{limit}
	</select>
	
</mapper>